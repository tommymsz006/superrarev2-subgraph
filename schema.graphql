type Artwork @entity {
  id: ID!
  tokenId: BigInt!
  artist: Account!
  owner: Account!
  uri: String!

  status: ArtworkStatus!
  currentBid: Bid
  currentSale: Sale
  bids: [Bid!]
  sales: [Sale!]
  transfers: [Transfer!]

  firstTransferPrice: BigInt
  lastTransferPrice: BigInt
  timeCreated: BigInt!
  timeLastTransferred: BigInt
  timeWithdrawn: BigInt
}

type Account @entity {
  id: ID!
  address: Bytes!
  totalPrimaryIncome: BigInt!
  totalRoyalty: BigInt!

  createdArtworks: [Artwork!] @derivedFrom(field: "artist")
  ownedArtworks: [Artwork!] @derivedFrom(field: "owner")
}

enum ArtworkStatus {
  Created
  Sold
  Withdrawn
}

type Bid @entity {
	id: ID!
	bidder: Account!
	price: BigInt!
	timeRaised: BigInt!
	status: BidStatus!
	timeCancelled: BigInt
	acceptedBy: Account
	timeAccepted: BigInt
	artwork: Artwork! @derivedFrom(field: "bids")
}

enum BidStatus {
	Open
	Accepted
	Cancelled
}

type Sale @entity {
	id: ID!
	seller: Account!
	price: BigInt!
	timeRaised: BigInt!
	isSold: Boolean!
	buyer: Account
	timeSold: BigInt
	artwork: Artwork! @derivedFrom(field: "sales")
}

type Transfer @entity {
	id: ID!
	from: Account!
	to: Account!
	timestamp: BigInt!
}