specVersion: 0.0.2
description: SuperRare is a marketplace to collect and trade unique, single-edition digital artworks. Each artwork is authentically created by an artist in the network, and tokenized as a crypto-collectible digital item that you can own and trade.
repository: https://github.com/tommymsz006/superrarev2-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SuperRareV2
    network: mainnet
    source:
      address: "0xb932a70a57673d89f4acffbe830e8ed7f75fb9e0"
      abi: SuperRareV2
      startBlock: 8486734
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TokenURIUpdated
        - Transfer
      abis:
        - name: SuperRareV2
          file: ./abis/SuperRareV2.json
      eventHandlers:
        - event: TokenURIUpdated(indexed uint256,string)
          handler: handleTokenURIUpdatedV2
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransferV2
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: SuperRareMarketAuction
    network: mainnet
    source:
      address: "0x2947F98C42597966a0ec25e92843c09ac17Fbaa7"
      abi: SuperRareMarketAuction
      startBlock: 8486736
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sold
        - SetSalePrice
        - Bid
        - AcceptBid
        - CancelBid
      abis:
        - name: SuperRareMarketAuction
          file: ./abis/SuperRareMarketAuction.json
      eventHandlers:
        - event: Sold(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleSold
        - event: SetSalePrice(indexed address,uint256,uint256)
          handler: handleSetSalePrice
        - event: Bid(indexed address,indexed address,uint256,uint256)
          handler: handleBid
        - event: AcceptBid(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleAcceptBid
        - event: CancelBid(indexed address,indexed address,uint256,uint256)
          handler: handleCancelBid
      # call handlers introduce significant initial processing time, hence it's not used at the moment
      #callHandlers:
      #  - function: setPrimarySaleFee(uint256)
      #    handler: handleSetPrimarySaleFee
      #  - function: setRoyaltyFee(uint256)
      #    handler: handleSetRoyaltyFee
      # block handlers for all also take initial processing time a lot, and filter by call does not work for this contract as tried
      #blockHandlers:
      #  - handler: handleBlockInMarketAuction
      #  - filter:
      #    - kind: call
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: SupeRare
    network: mainnet
    source:
      address: "0x41A322b28D0fF354040e2CbC676F0320d8c8850d"
      abi: SupeRare
      startBlock: 5364090
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Bid
        - AcceptBid
        - CancelBid
        - Sold
        - SalePriceSet
        - Transfer
      abis:
        - name: SupeRare
          file: ./abis/SupeRare.json
      eventHandlers:
        - event: Bid(indexed address,indexed uint256,indexed uint256)
          handler: handleBidV1
        - event: AcceptBid(indexed address,indexed address,uint256,indexed uint256)
          handler: handleAcceptBidV1
        - event: CancelBid(indexed address,indexed uint256,indexed uint256)
          handler: handleCancelBidV1
        - event: Sold(indexed address,indexed address,uint256,indexed uint256)
          handler: handleSoldV1
        - event: SalePriceSet(indexed uint256,indexed uint256)
          handler: handleSalePriceSetV1
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferV1
      file: ./src/mapping.ts

